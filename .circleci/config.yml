version: 2.1

publish_android: &PUBLISH_ANDROID
    executor: android
    steps:
        - checkout
        - attach_workspace:
                at: ./
        - run:
            name: Install Node 12.4.1
            command: |
              set +e
              wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
              nvm install 12.14.1
              nvm alias default 12.14.1

              echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
              echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
        - run:
                name: Build and publish android js bundles
                command: |
                    cd ~/project/
                    yarn android:clean-lib:aar
                    yarn android:build-lib
                    yarn android:publish-lib:aar:remote
                    bash ./scripts/publish-android.sh
                working_directory: ~/project/

publish_ios: &PUBLISH_IOS
    executor: node
    steps:
        - checkout
        - attach_workspace:
                at: ./
        - run:
                name: Build and publish iOS js bundles
                command: |
                    yarn ios:build-lib
                    bash ./scripts/publish-ios.sh
                working_directory: ~/project/

executors:
    node:
        docker:
            - image: circleci/node:12.14.1
        resource_class: 2xlarge
    android:
        docker:
            - image: circleci/android:api-28-node
        resource_class: 2xlarge

commands:
    install-dependencies:
        description: 'Install Dependencies'
        steps:
            - run:
                  name: Install Dependencies
                  command: yarn install --frozen-lockfile --ignore-engines
                  working_directory: ~/project/

    restore-yarn:
        description: 'Restore Yarn Package Cache'
        steps:
            - restore_cache:
                  key: yarn-packages-{{ checksum "yarn.lock" }}

    save-yarn:
        description: 'Save Yarn Package Cache'
        steps:
            - save_cache:
                  key: yarn-packages-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
    install-fontforge:
        description: 'Install fontforge'
        steps:
            - run:
                  name: Install fontforge
                  command: |
                    sudo apt-get update;
                    sudo apt-get install software-properties-common;
                    sudo add-apt-repository ppa:fontforge/fontforge -y;
                    sudo apt-get install fontforge;

jobs:
    setup:
        executor: node
        steps:
            - checkout
            - install-fontforge
            - restore-yarn
            - install-dependencies
            - save-yarn
            - persist_to_workspace:
                root: ./
                paths:
                    - ./

    run_lint:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run Lint
                  command: yarn lint
                  working_directory: ~/project/

    run_typecheck:
      executor: node
      steps:
        - checkout
        - attach_workspace:
            at: ./
        - run:
            name: Run Type Check
            command: yarn typecheck
            working_directory: ~/project/

    run_noplatform_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run No Specific Platform Tests
                  command: |
                      yarn test:common
                  working_directory: ~/project/

    run_android_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run Android Tests
                  command: |
                      yarn test:android
                  working_directory: ~/project/

    run_ios_tests:
        executor: node
        steps:
            - checkout
            - attach_workspace:
                  at: ./
            - run:
                  name: Run iOS Tests
                  command: yarn test:ios
                  working_directory: ~/project/

    publish_android_prod:
        <<: *PUBLISH_ANDROID

    publish_android_beta:
        <<: *PUBLISH_ANDROID

    publish_ios_prod:
        <<: *PUBLISH_IOS

    publish_ios_beta:
        <<: *PUBLISH_IOS

    publish_notes:
        executor: node
        steps:
        - checkout
        - attach_workspace:
            at: ./
        - run:
            name: Tag release & generate GitHub notes
            command: sh scripts/publish-notes.sh

workflows:
    version: 2

    run_tests:
        jobs:
            - setup
            - run_lint:
                requires:
                    - setup
            - run_typecheck:
                requires:
                  - setup
            - run_noplatform_tests:
                requires:
                    - setup
            - run_android_tests:
                requires:
                    - setup
            - run_ios_tests:
                requires:
                    - setup

            - hold_release_prod:
                type: approval
                context: nuk-tnl-app-universal
                filters:
                    branches:
                        only:
                            - master
                requires:
                    - run_lint
                    - run_typecheck
                    - run_noplatform_tests
                    - run_android_tests
                    - run_ios_tests
            - release_beta:
                context: nuk-tnl-app-universal
                requires: - setup
                filters:
                    branches:
                        only:
                            - release/*beta*
                - publish_ios_beta
            - publish_android_prod:
                context: nuk-tnl-app-universal
                requires:
                    - hold_release_prod
            - publish_ios_prod:
                context: nuk-tnl-app-universal
                requires:
                    - hold_release_prod
            - publish_notes:
                context: nuk-tnl-app-universal
                requires:
                    - publish_android_prod
                    - publish_ios_prod
            - publish_android_beta:
                context: nuk-tnl-app-universal
                requires:
                    - hold_release_beta
            - publish_ios_beta:
                context: nuk-tnl-app-universal
                requires:
                    - hold_release_beta
